# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "bento/centos-7.4"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh",	auto_correct: true    # Vagrant SSH port
  config.vm.network "forwarded_port", guest: 5432, host: 5432    # PostgreSQL
  config.vm.network "forwarded_port", guest: 110, host: 110      # POP3
  config.vm.network "forwarded_port", guest: 25, host: 25        # SMTP
  config.vm.network "forwarded_port", guest: 8888, host: 8888    # Apache HTTP
  

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
    vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    sudo yum install -y epel-release                     # Install additional EPEL repository
    sudo yum install -y dos2unix                         # Install dos2unix
    sudo yum install -y vim                              # Install Vim
    # sudo yum localinstall -y http://yum.postgresql.org/9.4/redhat/rhel-6-x86_64/pgdg-centos94-9.4-1.noarch.rpm # PostgeSQL 9.4 repo
    sudo yum localinstall -y http://download.postgresql.org/pub/repos/yum/10/redhat/rhel-7-x86_64/pgdg-centos10-10-2.noarch.rpm # PostgeSQL 10 repo
    sudo yum install -y postgresql10-server postgresql10              # Install PostgreSQL 10 server
    sudo /usr/pgsql-10/bin/postgresql-10-setup initdb    # Initialize default PostgreSQL DB
    sudo sed -i "s~host    all             all             127\.0\.0\.1/32            ident~host    all             all             0\.0\.0\.0/0               md5~" /var/lib/pgsql/10/data/pg_hba.conf    # Enable password authentication for PostgreSQL
    sudo sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'	/" /var/lib/pgsql/10/data/postgresql.conf    # Configure PostgreSQL to listen on all interfaces
    sudo systemctl enable postgresql-10.service         # Enable PostgreSQL service
    sudo systemctl restart postgresql-10                  # Start PostgreSQL
    sudo su - postgres -c "psql < /vagrant/db/setup-production.sql"  # Set-up CTI database for production
    sudo sed -i "s/inet_interfaces = localhost/#inet_interfaces = localhost/" /etc/postfix/main.cf
    sudo sed -i "s/#inet_interfaces = all/inet_interfaces = all/" /etc/postfix/main.cf
    sudo sed -i "s~#home_mailbox = Mailbox~home_mailbox = Mailbox/~" /etc/postfix/main.cf
    sudo systemctl enable postfix                        # Enable Postfix
    sudo systemctl restart postfix                         # Start Postfix
    sudo yum install -y dovecot                          # Install dovecot to enable POP3
    sudo sed -i "s/#disable_plaintext_auth = yes/disable_plaintext_auth = no/" /etc/dovecot/conf.d/10-auth.conf # Configure dovecot
    sudo sed -i "s/ssl = required/ssl = yes/" /etc/dovecot/conf.d/10-ssl.conf # Configure dovecot
    sudo sed -i "s@#mail_location =@mail_location = maildir:~/Mailbox@" /etc/dovecot/conf.d/10-mail.conf # Configure dovecot
    sudo systemctl enable dovecot                        # Enable dovecot
    sudo systemctl restart dovecot                         # Start dovecot
    sudo yum install -y alpine                           # Install mail client Alpine
    sudo yum install -y httpd                            # Install Apache
    sudo sed -i "s/^Listen 80$/Listen 8888/" /etc/httpd/conf/httpd.conf    # Configure Apache
    sudo yum install -y php                              # Install PHP
    sudo yum install -y php-pgsql                        # Install php-pg extension
    sudo ln -s /vagrant/vm/tools/adminer /var/www/html/adminer    # Link Adminer
    sudo systemctl enable httpd                          # Enable Apache
    sudo systemctl restart httpd                           # Start Apache
  SHELL
end
